"use strict";
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)
            t[p[i]] = s[p[i]];
    return t;
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const React = __importStar(require("react"));
const ContextMenu_1 = __importDefault(require("../ContextMenu/ContextMenu"));
const Input_1 = __importDefault(require("../Input/Input"));
const Progress_1 = __importDefault(require("../Progress/Progress"));
const styled_1 = __importDefault(require("../utils/styled"));
const Autocomplete_utils_1 = require("./Autocomplete.utils");
const Container = styled_1.default(ContextMenu_1.default) `
  width: ${({ fullWidth }) => (fullWidth ? "100%" : "fit-content")};
  display: flex;
  align-items: center;
`;
const initialState = { isContextMenuOpen: false };
class Autocomplete extends React.Component {
    constructor() {
        super(...arguments);
        this.state = initialState;
        this.openContextMenu = () => this.setState(() => ({ isContextMenuOpen: true }));
        this.closeContextMenu = () => this.setState(() => ({ isContextMenuOpen: false }));
    }
    render() {
        const _a = this.props, { fullWidth, results, resultIcon, loading, noResultsMessage, onResultClick, selectedResult, children } = _a, inputProps = __rest(_a, ["fullWidth", "results", "resultIcon", "loading", "noResultsMessage", "onResultClick", "selectedResult", "children"]);
        const { isContextMenuOpen } = this.state;
        return (React.createElement(Container, { open: isContextMenuOpen, iconLocation: "right", fullWidth: Boolean(fullWidth), items: Autocomplete_utils_1.makeItems({ results, value: this.props.value, resultIcon, noResultsMessage }), onClick: item => onResultClick(item) },
            loading && React.createElement(Progress_1.default, { bottom: true }),
            React.createElement(Input_1.default, Object.assign({ onFocus: this.openContextMenu, onBlur: this.closeContextMenu, fullWidth: true, preset: Boolean(selectedResult) }, inputProps))));
    }
}
Autocomplete.defaultProps = {
    noResultsMessage: "No results found.",
};
exports.Autocomplete = Autocomplete;
exports.default = Autocomplete;
//# sourceMappingURL=Autocomplete.js.map