import { Theme } from "./constants/deprecatedTheme";
declare type FontWeight = 400 | 500 | 600;
declare const constants: {
    font: {
        family: {
            main: string;
            code: string;
        };
        lineHeight: number;
        size: {
            /** 18px */
            title: number;
            /** 14px */
            body: number;
            /** 13px */
            small: number;
            /** 12px */
            fineprint: number;
        };
        weight: {
            /** 400 */
            regular: FontWeight;
            /** 500 */
            medium: FontWeight;
            /** 600 */
            bold: FontWeight;
        };
    };
    space: {
        /** Base space is `4px` */
        base: number;
        /** Small space is `8px` */
        small: number;
        /** Medium space is `12px` */
        medium: number;
        /** Content space is `16px` */
        content: number;
        /** Element space is `20px` */
        element: number;
        /** Big space is `28px` */
        big: number;
    };
    zIndex: {
        default: number;
        selectOptions: number;
        formFieldError: number;
        tooltip: number;
        modal: number;
        debugViewer: number;
        globalProgress: number;
    };
    color: {
        primary: string;
        disabled: string;
        warning: string;
        success: string;
        error: string;
        basic: string;
        ghost: string;
        white: string;
        black: string;
        background: {
            dark: string;
            light: string;
            lighter: string;
        };
        separators: {
            default: string;
            light: string;
        };
        text: {
            dark: string;
            default: string;
            light: string;
            lighter: string;
            lightest: string;
            action: string;
            white: string;
        };
        border: {
            default: string;
            disabled: string;
        };
        palette: string[];
    };
    shadows: {
        pressed: string;
        card: string;
        focus: string;
        popup: string;
    };
    borderRadius: number;
    compactSidebarWidth: number;
    sidebarWidth: number;
    titleHeight: number;
    /**
     * This redundant type-casting is necessary to give the typescript compiler access
     * to the `Theme` interface and prevent it from doing incorrect imports for it.
     * @todo look into making this unnecessary.
     */
    deprecated: Theme;
};
export declare const expandColor: (theme: Readonly<{
    font: {
        family: {
            main: string;
            code: string;
        };
        lineHeight: number;
        size: {
            /** 18px */
            title: number;
            /** 14px */
            body: number;
            /** 13px */
            small: number;
            /** 12px */
            fineprint: number;
        };
        weight: {
            /** 400 */
            regular: FontWeight;
            /** 500 */
            medium: FontWeight;
            /** 600 */
            bold: FontWeight;
        };
    };
    space: {
        /** Base space is `4px` */
        base: number;
        /** Small space is `8px` */
        small: number;
        /** Medium space is `12px` */
        medium: number;
        /** Content space is `16px` */
        content: number;
        /** Element space is `20px` */
        element: number;
        /** Big space is `28px` */
        big: number;
    };
    zIndex: {
        default: number;
        selectOptions: number;
        formFieldError: number;
        tooltip: number;
        modal: number;
        debugViewer: number;
        globalProgress: number;
    };
    color: {
        primary: string;
        disabled: string;
        warning: string;
        success: string;
        error: string;
        basic: string;
        ghost: string;
        white: string;
        black: string;
        background: {
            dark: string;
            light: string;
            lighter: string;
        };
        separators: {
            default: string;
            light: string;
        };
        text: {
            dark: string;
            default: string;
            light: string;
            lighter: string;
            lightest: string;
            action: string;
            white: string;
        };
        border: {
            default: string;
            disabled: string;
        };
        palette: string[];
    };
    shadows: {
        pressed: string;
        card: string;
        focus: string;
        popup: string;
    };
    borderRadius: number;
    compactSidebarWidth: number;
    sidebarWidth: number;
    titleHeight: number;
    /**
     * This redundant type-casting is necessary to give the typescript compiler access
     * to the `Theme` interface and prevent it from doing incorrect imports for it.
     * @todo look into making this unnecessary.
     */
    deprecated: Theme;
}>, colorToBeExpanded?: string | undefined) => string | null;
export declare type OperationalStyleConstants = Readonly<typeof constants>;
export default constants;
export { expandColor as deprecatedExpandColor } from "./constants/deprecatedTheme";
