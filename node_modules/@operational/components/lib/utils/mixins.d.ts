/**
 * Having React typings in scope is necessary for styled components not using React directly, otherwise
 * botched module names like `import("eac")` show up in the .d.ts files due to a typescript compiler error.
 * See issue: https://github.com/emotion-js/emotion/issues/788
 * @todo remove this as soon as the issue is fixed.
 */
import * as React from "react";
/**
 * Same issue for deprecated `Theme` object.
 */
import { Theme } from "./constants/deprecatedTheme";
export declare const inputFocus: ({ theme, isError }: {
    theme: Readonly<{
        font: {
            family: {
                main: string;
                code: string;
            };
            lineHeight: number;
            size: {
                title: number;
                body: number;
                small: number;
                fineprint: number;
            };
            weight: {
                regular: 400 | 600 | 500;
                medium: 400 | 600 | 500;
                bold: 400 | 600 | 500;
            };
        };
        space: {
            base: number;
            small: number;
            medium: number;
            content: number;
            element: number;
            big: number;
        };
        zIndex: {
            default: number;
            selectOptions: number;
            formFieldError: number;
            tooltip: number;
            modal: number;
            debugViewer: number;
            globalProgress: number;
        };
        color: {
            primary: string;
            disabled: string;
            warning: string;
            success: string;
            error: string;
            basic: string;
            ghost: string;
            white: string;
            black: string;
            background: {
                dark: string;
                light: string;
                lighter: string;
            };
            separators: {
                default: string;
                light: string;
            };
            text: {
                dark: string;
                default: string;
                light: string;
                lighter: string;
                lightest: string;
                action: string;
                white: string;
            };
            border: {
                default: string;
                disabled: string;
            };
            palette: string[];
        };
        shadows: {
            pressed: string;
            card: string;
            focus: string;
            popup: string;
        };
        borderRadius: number;
        compactSidebarWidth: number;
        sidebarWidth: number;
        titleHeight: number;
        deprecated: Theme;
    }>;
    isError?: boolean | undefined;
}) => {
    outline: number;
    border: string;
    borderColor: string;
    boxShadow: string;
};
export declare const Label: import("create-emotion-styled/types/react").StyledOtherComponent<{
    fullWidth?: boolean | undefined;
    left?: boolean | undefined;
}, React.DetailedHTMLProps<React.LabelHTMLAttributes<HTMLLabelElement>, HTMLLabelElement>, any>;
export declare const FormFieldControls: import("create-emotion-styled/types/react").StyledOtherComponent<{}, React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>, any>;
export declare const hoverTooltip: {};
export declare const FormFieldControl: import("create-emotion-styled/types/react").StyledOtherComponent<{}, React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>, any>;
export declare const FormFieldError: import("create-emotion-styled/types/react").StyledOtherComponent<{}, React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>, any>;
export declare const floatIn: string;
export declare const resetTransform: string;
export declare const spin: string;
