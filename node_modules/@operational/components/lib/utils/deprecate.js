"use strict";
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const React = __importStar(require("react"));
/*
 * Deprecate a component.
 *
 * Usage:
 *
 * const Comp: React.SFC<Props> = props => (
 *   <div />
 * )
 *
 * export default deprecate<Props>(props => [
 *   ...[ "Your component is deprecated" ],
 *   ...(props.oldProp ? [ "oldProp is deprecated, use newProp instead" ] : [])
 * ])(Comp)
 *
 * Typing caveats may arise. For functional components, the easiest fix is
 * to type them explicitly as React.SFC.
 */
function deprecate(createWarning) {
    return (Component) => {
        return class DeprecatedComponent extends React.Component {
            componentDidMount() {
                const warnings = createWarning(this.props);
                if (process.env.NODE_ENV !== "production" && warnings.length > 0) {
                    console.warn(`Operational UI deprecation warnings:\n  * ${warnings.join("\n  * ")}`);
                }
            }
            render() {
                return React.createElement(Component, Object.assign({}, this.props));
            }
        };
    };
}
exports.default = deprecate;
//# sourceMappingURL=deprecate.js.map