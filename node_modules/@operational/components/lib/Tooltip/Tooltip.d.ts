import * as React from "react";
import { DefaultProps } from "../types";
import { Position } from "./Tooltip.Container";
/**
 * In order to allow for tooltips that have a sensible max-width that adjusts its width for shorter text,
 * and in order to have that working reliably across browsers, this implementation renders the tooltip offscreen
 * in order to determine how wide it would be were it to not do line breaks at any width.
 * The actual tooltip is rendered with this information extracted from the DOM node.
 */
export interface BaseProps extends DefaultProps {
    className?: string;
    children?: React.ReactNode;
    /** Smart-positioned tooltip, with positioning reversed so it doesn't flow out of the window's bounding box. Currently works for left and top-positioned tooltips. */
    smart?: boolean;
}
export interface TopProps extends BaseProps {
    /** Top-positioned tooltip */
    top?: boolean;
    /** Left-positioned tooltip */
    left?: never;
    /** Right-positioned tooltip */
    right?: never;
    /** Bottom-positioned tooltip */
    bottom?: never;
}
export interface SmartProps extends BaseProps {
    /** Top-positioned tooltip */
    top?: never;
    /** Left-positioned tooltip */
    left?: never;
    /** Right-positioned tooltip */
    right?: never;
    /** Bottom-positioned tooltip */
    bottom?: never;
}
export interface LeftProps extends BaseProps {
    /** Top-positioned tooltip */
    top?: never;
    /** Left-positioned tooltip */
    left?: boolean;
    /** Right-positioned tooltip */
    right?: never;
    /** Bottom-positioned tooltip */
    bottom?: never;
}
export interface RightProps extends BaseProps {
    /** Top-positioned tooltip */
    top?: never;
    /** Left-positioned tooltip */
    left?: never;
    /** Right-positioned tooltip */
    right?: boolean;
    /** Bottom-positioned tooltip */
    bottom?: never;
}
export interface BottomProps extends BaseProps {
    /** Top-positioned tooltip */
    top?: never;
    /** Left-positioned tooltip */
    left?: never;
    /** Right-positioned tooltip */
    right?: never;
    /** Bottom-positioned tooltip */
    bottom?: boolean;
}
export declare type TooltipProps = TopProps | LeftProps | RightProps | BottomProps | SmartProps;
export interface State {
    bbTop: number;
    bbBottom: number;
    bbLeft: number;
    bbRight: number;
    singleLineTextWidth: number;
}
export declare const dangerousTooltipContainerClassName = "operational-ui-tooltip";
declare class Tooltip extends React.Component<TooltipProps, State> {
    state: {
        bbTop: number;
        bbLeft: number;
        bbRight: number;
        bbBottom: number;
        singleLineTextWidth: number;
    };
    containerNode?: HTMLElement;
    offScreenWidthTestNode?: HTMLElement;
    setDomProperties(): void;
    componentDidMount(): void;
    getPosition(): Position;
    getDisplayPosition(windowSize: {
        width: number;
        height: number;
    }): Position;
    render(): JSX.Element;
}
export default Tooltip;
