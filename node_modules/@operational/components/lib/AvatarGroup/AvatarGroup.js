"use strict";
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)
            t[p[i]] = s[p[i]];
    return t;
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const React = __importStar(require("react"));
const Avatar_1 = __importDefault(require("../Avatar/Avatar"));
const styled_1 = __importDefault(require("../utils/styled"));
const Container = styled_1.default("div")({
    display: "flex",
});
const GroupedAvatar = styled_1.default(Avatar_1.default)({
    marginLeft: -12,
});
const AvatarGroup = (_a) => {
    var { avatars, size, onMoreClick } = _a, props = __rest(_a, ["avatars", "size", "onMoreClick"]);
    const avatarsToDisplay = avatars
        ? avatars.map((avatar, i) => React.createElement(GroupedAvatar, Object.assign({ addBorder: true, size: size, key: i }, avatar)))
        : props.children;
    const count = React.Children.count(avatarsToDisplay);
    const mustSlice = props.maximumToDisplay < count;
    return (React.createElement(Container, Object.assign({}, props),
        mustSlice ? React.Children.toArray(avatarsToDisplay).slice(0, props.maximumToDisplay - 1) : avatarsToDisplay,
        mustSlice && (React.createElement(GroupedAvatar, { addBorder: true, size: size, onClick: onMoreClick, name: "more", assignColor: false },
            "+",
            count - props.maximumToDisplay + 1))));
};
AvatarGroup.defaultProps = {
    maximumToDisplay: 4,
};
exports.default = AvatarGroup;
//# sourceMappingURL=AvatarGroup.js.map