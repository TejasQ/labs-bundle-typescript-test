"use strict";
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)
            t[p[i]] = s[p[i]];
    return t;
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const React = __importStar(require("react"));
const tinycolor2_1 = __importDefault(require("tinycolor2"));
const styled_1 = __importDefault(require("../utils/styled"));
const getColorFromProps = ({ running, success, error, state, theme, }) => {
    if (state) {
        return (new Map([["error", theme.color.error], ["running", theme.color.warning], ["success", theme.color.success]]).get(state) || "#989898");
    }
    // deprecated api bellow
    if (running) {
        return theme.color.warning;
    }
    if (success) {
        return theme.color.success;
    }
    if (error) {
        return theme.color.error;
    }
    return "#989898";
};
const StatusDot = styled_1.default("div")(props => ({
    display: "inline-block",
    marginRight: props.theme.space.small,
    width: props.theme.space.small,
    height: props.theme.space.small,
    borderRadius: "50%",
    boxShadow: `0 0 4px
    ${tinycolor2_1.default(getColorFromProps(props))
        .setAlpha(0.6)
        .toHslString()}`,
    backgroundColor: getColorFromProps(props),
}));
const Status = (_a) => {
    var { children } = _a, props = __rest(_a, ["children"]);
    return (React.createElement(React.Fragment, null,
        React.createElement(StatusDot, Object.assign({}, props)),
        children));
};
exports.default = Status;
//# sourceMappingURL=Status.js.map