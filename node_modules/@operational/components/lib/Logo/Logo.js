"use strict";
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)
            t[p[i]] = s[p[i]];
    return t;
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const React = __importStar(require("react"));
const OperationalContext_1 = __importDefault(require("../OperationalContext/OperationalContext"));
const utils_1 = require("../utils");
const constants_1 = require("../utils/constants");
const styled_1 = __importDefault(require("../utils/styled"));
const Logo_Shapes_1 = __importDefault(require("./Logo.Shapes"));
const logoPadding = 9;
const Container = styled_1.default("div")(({ color_, size_, theme, aspectRatio }) => `
  padding: ${logoPadding}px;
  width: ${(size_ - 2 * logoPadding) * aspectRatio + 2 * logoPadding}px;
  height: ${size_}px;
  fill: ${constants_1.expandColor(theme, color_) || theme.color.white};
  & svg {
    height: ${size_ - 2 * logoPadding}px;
  }
`);
const LinkContainer = styled_1.default("a")(({ color_, size_, theme, aspectRatio }) => `
  padding: ${logoPadding}px;
  width: ${(size_ - 2 * logoPadding) * aspectRatio + 2 * logoPadding}px;
  height: ${size_}px;
  fill: ${constants_1.expandColor(theme, color_) || theme.color.white};
  & svg {
    height: ${size_ - 2 * logoPadding}px;
  }
`);
const Logo = (_a) => {
    var { stack, name, size, color, to } = _a, props = __rest(_a, ["stack", "name", "size", "color", "to"]);
    const { svg, aspectRatio } = Logo_Shapes_1.default[name];
    if (!to) {
        return (React.createElement(Container, Object.assign({ stack: stack, size_: size, aspectRatio: aspectRatio, color_: color }, props), svg));
    }
    return (React.createElement(OperationalContext_1.default, null, ctx => (React.createElement(LinkContainer, Object.assign({ size_: size, color_: color, stack: stack, aspectRatio: aspectRatio }, props, { href: to, onClick: (ev) => {
            if (props.onClick) {
                props.onClick(ev);
            }
            if (!utils_1.isModifiedEvent(ev) && ctx.pushState && to && !utils_1.isOutsideLink(to)) {
                ev.preventDefault();
                ctx.pushState(to);
            }
        } }), svg))));
};
Logo.defaultProps = {
    size: 50,
    color: "white",
    stack: false,
};
exports.default = Logo;
//# sourceMappingURL=Logo.js.map