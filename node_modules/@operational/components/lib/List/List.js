"use strict";
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const React = __importStar(require("react"));
const Icon_1 = __importDefault(require("../Icon/Icon"));
const Body_1 = __importDefault(require("../Typography/Body"));
const styled_1 = __importDefault(require("../utils/styled"));
const Container = styled_1.default("div") `
  display: flex;
  align-items: center;
  padding: ${({ theme }) => theme.space.big}px;
  border: 1px solid ${({ theme }) => theme.color.border.disabled};
  width: ${({ fullWidth }) => (fullWidth ? "100%" : "640px")};
  cursor: ${({ onClick }) => (onClick ? "pointer" : "initial")};
  background-color: ${({ theme }) => theme.color.white};

  :hover {
    background-color: ${({ theme }) => theme.color.background.lighter};
  }

  :not(:last-child) {
    margin-bottom: ${({ theme }) => theme.space.content}px;
  }
`;
const ImageContainer = styled_1.default("div") `
  margin-right: ${({ theme }) => theme.space.element}px;
  width: 170px;
  flex: 0 0 170px;

  img {
    max-width: 100%;
  }
`;
const StyledIcon = styled_1.default(Icon_1.default) `
  fill: ${({ theme }) => theme.color.border.default};
  width: 24px;
  flex: 0 0 30px;
  margin-left: auto;
  justify-self: flex-end;
`;
const BodyText = styled_1.default(Body_1.default) `
  margin: 0;
  margin-right: ${({ theme }) => theme.space.content}px;
`;
const List = ({ items, fullWidth }) => (React.createElement(React.Fragment, null, items.map(({ title, photo, description, onClick }, index) => (React.createElement(Container, { onClick: onClick, fullWidth: fullWidth, key: index },
    photo && (React.createElement(ImageContainer, null, typeof photo === "string" ? React.createElement("img", { alt: title || description, src: photo }) : photo)),
    React.createElement(BodyText, null, description),
    onClick && React.createElement(StyledIcon, { right: true, size: 21, name: "ChevronRight" }))))));
exports.default = List;
//# sourceMappingURL=List.js.map