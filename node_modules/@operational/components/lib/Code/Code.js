"use strict";
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)
            t[p[i]] = s[p[i]];
    return t;
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const React = __importStar(require("react"));
const react_emotion_1 = __importStar(require("react-emotion"));
const react_highlight_1 = __importDefault(require("react-highlight"));
const react_json_view_1 = __importDefault(require("react-json-view"));
const constants_1 = __importDefault(require("../utils/constants"));
const styles_1 = __importDefault(require("./styles"));
const defaultCodeTheme = {
    /**
     * Default Background
     */
    base00: "rgba(20, 153, 206, 0.05)",
    /**
     * Lighter Background (Used for status bars)
     */
    base01: "rgb(245, 245, 245)",
    /**
     * Selection Background
     */
    base02: "rgb(235, 235, 235)",
    /**
     * Comments, Invisibles, Line Highlighting
     */
    base03: "#93a1a1",
    /**
     * Descriptor (1 item, 2 items)
     */
    base04: "rgba(0, 0, 0, 0.3)",
    /**
     * Default Foreground, Caret, Delimiters, Operators
     */
    base05: "#586e75",
    /**
     * Light Foreground (Not often used)
     */
    base06: "#073642",
    /**
     * Keys and curlies
     */
    base07: "#002b36",
    /**
     * Variables, XML Tags, Markup Link Text, Markup Lists, Diff Deleted
     */
    base08: "#d33682",
    /**
     * Values:
     * `{ key: "value" }`
     */
    base09: "#cb4b16",
    /**
     * Classes, Markup Bold, Search Text Background
     */
    base0A: "#dc322f",
    /**
     * Strings, Inherited Class, Markup Code, Diff Inserted
     */
    base0B: "#859900",
    /**
     * Support, Regular Expressions, Escape Characters, Markup Quotes
     */
    base0C: "#6c71c4",
    /**
     * Functions, Methods, Attribute IDs, Headings
     */
    base0D: "#586e75",
    /**
     * Keywords, Storage, Selector, Markup Italic, Diff Changed
     */
    base0E: "#2aa198",
    /**
     * Deprecated, Opening/Closing Embedded Language Tags, e.g. <?php ?>
     */
    base0F: "#268bd2",
};
const Container = react_emotion_1.default("div") `
  display: flex;
  pre {
    flex: 1;
    display: flex;
    margin: 0;
  }

  code {
    flex: 1;
  }

  /**
    * This is necessary because of odd arrow
    * placements inside the JSON viewer.
    */
  .icon-container > span {
    display: inline-flex;
  }
`;
const StyledHighlight = react_emotion_1.default(react_highlight_1.default)(({ theme }) => {
    return {
        margin: 0,
        border: "1px solid rgba(20, 153, 206, 0.1)",
        borderRadius: theme.borderRadius,
        padding: `${theme.space.small}px`,
        /**
         * We use !important here to handle an edge case:
         * this component, by default, gets a class .hljs
         * that also imports a global style for this class.
         *
         * Some bundlers (including Styleguidist's) place
         * this imported style _after_ our emotion-based
         * className definition, and the cascading nature
         * of CSS overrides this component's style.
         *
         * In short, we use !important for opinionation
         * of this component.
         */
        backgroundColor: "rgba(20, 153, 206, 0.05) !important",
    };
});
const StyledReactJson = (props) => (React.createElement(react_json_view_1.default, Object.assign({}, props, { style: {
        margin: 0,
        border: "1px solid rgba(20, 153, 206, 0.1)",
        borderRadius: constants_1.default.borderRadius,
        padding: `${constants_1.default.space.small}px`,
        flex: 1,
    }, theme: Object.assign({}, defaultCodeTheme, props.codeTheme) || defaultCodeTheme, displayDataTypes: false, enableClipboard: true, name: false })));
const Code = (_a) => {
    var { children } = _a, props = __rest(_a, ["children"]);
    if (props.syntax === "json") {
        const { src, codeTheme, collapsed, shouldCollapse } = props, containerProps = __rest(props, ["src", "codeTheme", "collapsed", "shouldCollapse"]);
        return (React.createElement(Container, Object.assign({}, containerProps),
            React.createElement(StyledReactJson, { codeTheme: codeTheme, src: src, collapsed: collapsed, shouldCollapse: shouldCollapse })));
    }
    return (React.createElement(Container, Object.assign({}, props),
        React.createElement(StyledHighlight, { className: `${react_emotion_1.css(styles_1.default)} ${props.syntax}` }, children)));
};
exports.default = Code;
//# sourceMappingURL=Code.js.map