"use strict";
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const React = __importStar(require("react"));
const __1 = require("../");
const utils_1 = require("../utils");
const styled_1 = __importDefault(require("../utils/styled"));
const Container = styled_1.default("div")(({ theme, selected }) => {
    const backgroundColor = selected ? theme.color.background.lighter : theme.color.white;
    return {
        backgroundColor,
        display: "flex",
        alignItems: "center",
        position: "relative",
        padding: `${theme.space.small}px ${theme.space.content}px`,
        wordWrap: "break-word",
        outline: "none",
        borderTop: "1px solid",
        borderColor: utils_1.darken(backgroundColor, 10),
        color: theme.color.text.default,
        ":hover": {
            backgroundColor: utils_1.darken(backgroundColor, 5),
        },
    };
});
const IconContainer = styled_1.default("div")(({ theme }) => {
    const size = 18;
    return {
        display: "flex",
        alignItems: "center",
        flex: "1 0",
        flexBasis: size,
        justifyContent: "center",
        maxWidth: size,
        height: size,
        backgroundColor: theme.color.primary,
        borderRadius: "50%",
        marginLeft: "auto",
        "& svg": {
            color: theme.color.white,
            width: 12,
            height: 12,
        },
    };
});
const SelectOption = (props) => (React.createElement(Container, { key: props.id, className: props.className, selected: Boolean(props.selected), tabIndex: -2, role: "option", "aria-selected": props.selected, onClick: (ev) => {
        ev.stopPropagation();
        if (props.onClick) {
            props.onClick();
        }
    } },
    props.children,
    props.selected ? (React.createElement(IconContainer, null,
        React.createElement(__1.Icon, { name: "Yes", size: 10 }))) : null));
exports.default = SelectOption;
//# sourceMappingURL=Select.Option.js.map