"use strict";
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const React = __importStar(require("react"));
const styled_1 = __importDefault(require("../utils/styled"));
const Container = styled_1.default("div")({
    label: "breadcrumbs",
    "& > *": {
        display: "inline-block",
    },
    "& a": {
        textDecoration: "none",
        color: "inherit",
    },
});
const Slash = styled_1.default("span")(({ theme }) => ({
    display: "inline-block",
    margin: `0 ${theme.deprecated.spacing / 2}px`,
    color: theme.deprecated.colors.gray,
    ":first-child": {
        marginLeft: 0,
    },
}));
/**
 * Intersperse slashes between the children (`<Breadcrumb />` elements)
 * Curried first argument is necessary to give unique auto-incrementing
 *  keys to the slash elements.
 */
const intersperseSlashes = (index) => ([head, ...tail]) => head ? [React.createElement(Slash, { key: `divider-${index}` }, "/"), head, ...intersperseSlashes(index + 1)(tail)] : [];
const Breadcrumbs = props => (React.createElement(Container, Object.assign({}, props), intersperseSlashes(0)(React.Children.toArray(props.children))));
exports.default = Breadcrumbs;
//# sourceMappingURL=Breadcrumbs.js.map