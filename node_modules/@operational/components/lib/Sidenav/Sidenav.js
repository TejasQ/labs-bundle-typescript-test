"use strict";
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)
            t[p[i]] = s[p[i]];
    return t;
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const React = __importStar(require("react"));
const utils_1 = require("../utils");
const styled_1 = __importDefault(require("../utils/styled"));
const Container = styled_1.default("div")(({ theme, compact }) => {
    const backgroundColor = theme.color.white;
    const color = utils_1.readableTextColor(backgroundColor, [theme.color.text.default, theme.color.white]);
    return {
        color,
        position: "relative",
        display: "flex",
        flexDirection: "column",
        alignItems: "flex-start",
        overflow: "auto",
        width: compact ? theme.compactSidebarWidth : theme.sidebarWidth,
        height: "100%",
        borderRight: "1px solid",
        borderRightColor: theme.color.separators.default,
        background: theme.color.white,
    };
});
const Sidenav = (_a) => {
    var { children } = _a, props = __rest(_a, ["children"]);
    return (React.createElement(Container, Object.assign({}, props), React.Children.map(children, child => {
        if (!child) {
            return;
        }
        // see line 8 for the safety of this assertion
        const childElement = child;
        return Object.assign({}, childElement, { props: Object.assign({}, childElement.props, { compact: props.compact }) });
    })));
};
exports.default = Sidenav;
//# sourceMappingURL=Sidenav.js.map