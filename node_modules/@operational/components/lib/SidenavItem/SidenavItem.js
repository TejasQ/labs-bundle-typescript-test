"use strict";
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)
            t[p[i]] = s[p[i]];
    return t;
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const React = __importStar(require("react"));
const Icon_1 = __importDefault(require("../Icon/Icon"));
const OperationalContext_1 = __importDefault(require("../OperationalContext/OperationalContext"));
const utils_1 = require("../utils");
const styled_1 = __importDefault(require("../utils/styled"));
const getIconSize = (compact = false) => (compact ? 30 : 18);
const makeContainer = (type) => styled_1.default(type === "link" ? "a" : "div")(({ theme, compact, isActive, end_ }) => {
    return Object.assign({ display: "flex", padding: `${compact ? 10 : 0}px ${compact ? 0 : theme.space.content}px`, height: compact ? "auto" : 36, cursor: "pointer", width: "100%", alignItems: "center", flexDirection: compact ? "column" : "row", justifyContent: compact ? "center" : "flex-start", whiteSpace: "nowrap", userSelect: "none", fontSize: theme.font.size.body, color: isActive ? theme.color.primary : theme.color.text.lightest, fontWeight: theme.font.weight.regular, boxShadow: isActive && compact ? `2px 0 0 inset ${theme.color.primary}` : "none", marginTop: end_ ? "auto" : 0, alignSelf: end_ ? "flex-end" : "flex-start" }, (end_ ? { "& + .operational-ui__sidenav-item_end": { marginTop: 0 } } : {}), { 
        // Specificity is piled up here to override default styles
        "a:link&, a:visited&": {
            textDecoration: "none",
            color: isActive ? theme.color.primary : theme.color.text.lightest,
        }, "&:hover": {
            backgroundColor: theme.color.background.lighter,
            color: isActive ? theme.color.primary : theme.color.text.dark,
        }, "&:last-child": {
            marginBottom: end_ ? 0 : theme.space.content,
        } });
});
const IconContainer = styled_1.default("span")(({ compact, theme }) => {
    const iconSize = getIconSize(compact);
    return {
        width: iconSize,
        height: iconSize,
        display: "inline-flex",
        alignItems: "center",
        justifyContent: "center",
        flex: `0 0 ${iconSize}px`,
        marginRight: compact ? 0 : theme.space.small,
    };
});
const Label = styled_1.default("span")(({ compact, theme, hasIcon }) => {
    return compact
        ? {
            marginTop: theme.space.medium,
            padding: 0,
            display: "block",
            fontSize: 11,
            fontWeight: theme.font.weight.medium,
            lineHeight: 1.18,
            color: theme.color.text.lighter,
            textTransform: "uppercase",
            width: "100%",
            wordBreak: "break-all",
            wordWrap: "break-word",
            overflow: "hidden",
            textAlign: "center",
        }
        : {
            display: "inline-block",
            paddingLeft: hasIcon ? theme.space.base : 0,
        };
});
const SidenavItem = (_a) => {
    var { to, active, icon, label, compact, compactLabel, end, className } = _a, props = __rest(_a, ["to", "active", "icon", "label", "compact", "compactLabel", "end", "className"]);
    const Container = to ? makeContainer("link") : makeContainer("block");
    const isActive = Boolean(active);
    return (React.createElement(OperationalContext_1.default, null, ctx => (React.createElement(Container, Object.assign({}, props, { className: end ? "operational-ui__sidenav-item_end" : "", end_: Boolean(end), compact: compact, href: to, onClick: (ev) => {
            ev.stopPropagation();
            if (props.onClick) {
                props.onClick();
            }
            if (!utils_1.isModifiedEvent(ev) && ctx.pushState && to && !utils_1.isOutsideLink(to)) {
                ev.preventDefault();
                ctx.pushState(to);
            }
        }, isActive: isActive }),
        icon && (React.createElement(IconContainer, { compact: compact },
            React.createElement(Icon_1.default, { name: icon, size: getIconSize(compact) }))),
        React.createElement(Label, { hasIcon: Boolean(icon), compact: compact }, compact ? compactLabel || label : label)))));
};
exports.default = SidenavItem;
//# sourceMappingURL=SidenavItem.js.map