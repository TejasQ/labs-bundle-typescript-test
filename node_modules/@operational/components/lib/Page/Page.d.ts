import * as React from "react";
import { Tab } from "../Internals/Tabs";
import { PageContentProps } from "../PageContent/PageContent";
import { DefaultProps } from "../types";
import { OperationalStyleConstants } from "../utils/constants";
export interface BaseProps extends DefaultProps {
    /** Content of the page */
    children?: PageContentProps["children"];
    /** Page title */
    title?: string;
    /** Page actions, typically `condensed button` component inside a fragment */
    actions?: React.ReactNode;
    /** Actions position */
    actionsPosition?: "start" | "main" | "end";
    /** A custom color for the page header color? */
    color?: keyof OperationalStyleConstants["color"] | string;
    /** Toggles a top progress bar to indicate loading state */
    loading?: boolean;
}
export interface PropsWithSimplePage extends BaseProps {
    /** Areas template for `PageArea` disposition */
    areas?: "main";
    /** Fill the entire width */
    fill?: boolean;
    tabs?: never;
    activeTabName?: never;
    onTabChange?: never;
    condensedTitle?: never;
}
export interface PropsWithComplexPage extends BaseProps {
    /** Areas template for `PageArea` disposition */
    areas: "main side" | "side main";
    /** Fill the entire width */
    fill?: boolean;
    tabs?: never;
    activeTabName?: never;
    onTabChange?: never;
    condensedTitle?: never;
}
export interface PropsWithTabs extends BaseProps {
    /**
     * List of tabs
     * This will disable any children to render `tabs[i].component` instead
     */
    tabs: Tab[];
    /**
     * Active tab name
     *
     * If not specified, active tab is controlled by internal state.
     */
    activeTabName?: string;
    /**
     * Send the active name tab on each tab change (in lowercase).
     */
    onTabChange?: (name: string) => void;
    children?: never;
    areas?: never;
    fill?: never;
    /** Condensed option */
    condensedTitle?: boolean;
}
export declare type PageProps = PropsWithSimplePage | PropsWithComplexPage | PropsWithTabs;
declare const initialState: {};
declare class Page extends React.Component<PageProps, Readonly<typeof initialState>> {
    static defaultProps: Partial<PageProps>;
    readonly state: {};
    private renderPageWithTabs;
    private renderPageWithoutTabs;
    render(): JSX.Element;
}
export default Page;
