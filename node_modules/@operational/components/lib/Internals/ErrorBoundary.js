"use strict";
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const React = __importStar(require("react"));
const Button_1 = __importDefault(require("../Button/Button"));
const Splash_1 = __importDefault(require("../Splash/Splash"));
const styled_1 = __importDefault(require("../utils/styled"));
const StackTrace = styled_1.default("div") `
  font-size: ${props => props.theme.font.size.small}px;
  max-height: 240px;
  overflow: auto;

  p {
    margin-top: ${props => props.theme.space.small}px;
  }

  ::before {
    content: "Stack Trace";
    font-size: 16px;
    font-weight: 500;
    display: block;
    padding-bottom: ${props => props.theme.space.small}px;
    margin-bottom: ${props => props.theme.space.element}px;
    border-bottom: 1px solid rgba(255, 255, 255, 0.2);
  }
`;
const ErrorBoundary = ({ environment, error }) => {
    const isProduction = environment === "production";
    return (React.createElement(Splash_1.default, { color: "error", title: "Something Went Wrong", actions: !isProduction ? (React.createElement(Button_1.default, { to: "https://reactjs.org/docs/error-boundaries.html" }, "Learn More about Error Boundaries")) : (React.createElement(Button_1.default, { to: "/" }, "Reload")) }, !isProduction ? (React.createElement(React.Fragment, null,
        React.createElement("p", null, "One of your components further down in the component tree has errored, causing your app to unmount and instead, show this screen."),
        React.createElement("p", null, "Please handle your errors in your components further down the React tree."),
        React.createElement("p", null, `The error: ${error.message.length < 200 ? error.message : error.message.slice(0, 200) + `â€¦`}`),
        error.stack && (React.createElement(StackTrace, null, error.stack.split("\n").map((line, index) => (React.createElement("p", { key: index, style: { paddingLeft: `${index * 8}px` } }, line))))))) : (React.createElement("p", null,
        "An unexpected error occured.",
        React.createElement("br", null),
        "Please check back later."))));
};
ErrorBoundary.defaultProps = {
    environment: process.env.NODE_ENV,
};
exports.default = ErrorBoundary;
//# sourceMappingURL=ErrorBoundary.js.map