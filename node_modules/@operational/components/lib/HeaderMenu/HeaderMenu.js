"use strict";
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const React = __importStar(require("react"));
const ContextMenu_1 = __importDefault(require("../ContextMenu/ContextMenu"));
const styled_1 = __importDefault(require("../utils/styled"));
const backgroundColor = "hsla(0, 0%, 100%, 0.1)";
const boxShadow = "0 3px 6px rgba(0, 0%, 0%, 0.3)";
const Container = styled_1.default("div")(({ theme, align, isOpen, withCaret }) => (Object.assign({ width: 250, lineHeight: "50px", padding: `0 ${theme.space.content}px`, color: isOpen ? theme.color.white : "#ffffffcc", backgroundColor: isOpen ? backgroundColor : "transparent", boxShadow: isOpen ? boxShadow : "none", fontWeight: theme.font.weight.medium, display: "flex", alignItems: "center", justifyContent: align === "left" ? "flex-start" : "flex-end", "& > div": {
        marginLeft: theme.space.small,
    }, "&:hover": {
        boxShadow,
        backgroundColor,
        color: theme.color.white,
    } }, (withCaret
    ? {
        "&::after": {
            content: "''",
            position: "absolute",
            top: "50%",
            [align === "left" ? "right" : "left"]: theme.space.content + theme.space.small,
            width: 0,
            height: 0,
            border: "4px solid transparent",
            borderTopColor: "#ffffff80",
            transform: "translateY(calc(-50% + 2px))",
        },
        "&:hover": {
            boxShadow,
            backgroundColor,
            color: theme.color.white,
            "&::after": {
                borderTopColor: theme.color.white,
            },
        },
    }
    : {}))));
const HeaderMenu = props => {
    return (React.createElement(ContextMenu_1.default, Object.assign({}, props), isOpen => (React.createElement(Container, { isOpen: isOpen, align: props.align, withCaret: Boolean(props.withCaret) }, props.children))));
};
HeaderMenu.defaultProps = {
    align: "left",
    withCaret: false,
};
exports.default = HeaderMenu;
//# sourceMappingURL=HeaderMenu.js.map